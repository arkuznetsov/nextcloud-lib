// ----------------------------------------------------------
// This Source Code Form is subject to the terms of the
// Mozilla Public License, v.2.0. If a copy of the MPL
// was not distributed with this file, You can obtain one
// at http://mozilla.org/MPL/2.0/.
// ----------------------------------------------------------
// Codebase: https://github.com/ArKuznetsov/nextcloud-lib/
// ----------------------------------------------------------

#Использовать 1connector

Перем Адрес;               // - Строка    - адрес сервиса NextCloud
Перем ИмяПользователя;     // - Строка    - имя пользователя сервиса NextCloud
Перем ПарольПользователя;  // - Строка    - пароль пользователя сервиса NextCloud
Перем Токен;               // - Строка    - текущий токен подключения к сервису NextCloud

Перем Пользователи;        // - ПользователиNextCloud    - объект управления пользователями NextCloud
Перем Файлы;               // - ФайлыNextCloud           - объект управления файлами NextCloud

Перем Лог;                 // логгер

#Область ПрограммныйИнтерфейс

// Возвращает адрес сервиса NextCloud
//
// Возвращаемое значение:
//    Строка    - адрес сервиса NextCloud
//
Функция Адрес() Экспорт

	Возврат Адрес;

КонецФункции // Адрес()

// Устанавливает новый адрес сервиса NextCloud
//
// Параметры:
//   НовыйАдрес    - Строка    - новый адрес сервиса NextCloud
//
Процедура УстановитьАдрес(НовыйАдрес) Экспорт

	Адрес = НовыйАдрес;

КонецПроцедуры // УстановитьАдрес()

// Возвращает имя пользователя сервиса NextCloud
//
// Возвращаемое значение:
//   Строка    - имя пользователя сервиса NextCloud
//
Функция ИмяПользователя() Экспорт

	Возврат ИмяПользователя;

КонецФункции // ИмяПользователя()

// Устанавливает новое имя пользователя сервиса NextCloud
//
// Параметры:
//   НовоеИмяПользователя    - Строка    - новое имя пользователя сервиса NextCloud
//
Процедура УстановитьИмяПользователя(НовоеИмяПользователя) Экспорт

	ИмяПользователя = НовоеИмяПользователя;

КонецПроцедуры // УстановитьИмяПользователя()

// Устанавливает новый пароль пользователя сервиса NextCloud
//
// Параметры:
//   НовыйПарольПользователя    - Строка    - новый пароль пользователя сервиса NextCloud
//
Процедура УстановитьПарольПользователя(НовыйПарольПользователя) Экспорт

	ПарольПользователя = НовыйПарольПользователя;

КонецПроцедуры // УстановитьПарольПользователя()

Функция ВыполнитьЗапросGet(Путь, ПараметрыЗапроса = Неопределено) Экспорт

	Аутентификация = Новый Структура();
	Аутентификация.Вставить("Пользователь", ИмяПользователя);
	Аутентификация.Вставить("Пароль"      , ПарольПользователя);

	Заголовки = Новый Соответствие();
	Заголовки.Вставить("OCS-APIRequest", "true");
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Аутентификация", Аутентификация);
	ДополнительныеПараметры.Вставить("Заголовки"     , Заголовки);

	Результат = КоннекторHTTP.Get(
		Адрес + Путь,
		ПараметрыЗапроса,
		ДополнительныеПараметры);

	Возврат Результат;

КонецФункции // ВыполнитьЗапрос()

Функция ВыполнитьЗапросPost(Путь, Данные = Неопределено) Экспорт

	Аутентификация = Новый Структура();
	Аутентификация.Вставить("Пользователь", ИмяПользователя);
	Аутентификация.Вставить("Пароль"      , ПарольПользователя);

	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
	Заголовки.Вставить("OCS-APIRequest", "true");
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Аутентификация", Аутентификация);
	ДополнительныеПараметры.Вставить("Заголовки"     , Заголовки);

	Результат = КоннекторHTTP.Post(
		Адрес + Путь,
		Данные,
		,
		ДополнительныеПараметры);

	Возврат Результат;

КонецФункции // ВыполнитьЗапрос()

Функция ВыполнитьЗапросPropfind(Путь, Данные = Неопределено) Экспорт

	Аутентификация = Новый Структура();
	Аутентификация.Вставить("Пользователь", ИмяПользователя);
	Аутентификация.Вставить("Пароль"      , ПарольПользователя);

	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-Type", "text/xml");
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Аутентификация", Аутентификация);
	ДополнительныеПараметры.Вставить("Заголовки"     , Заголовки);
	ДополнительныеПараметры.Вставить("Данные"        , Данные);

	Результат = КоннекторHTTP.ВызватьМетод(
		"PROPFIND",
		Адрес + Путь,
		ДополнительныеПараметры);

	Возврат Результат;

КонецФункции // ВыполнитьЗапрос()

// Возвращает объект управления пользователями сервиса NextCloud
//
// Возвращаемое значение:
//   ПользователиNextCloud    - объект управления пользователями сервиса NextCloud
//
Функция Пользователи() Экспорт

	Если НЕ ЗначениеЗаполнено(Пользователи) Тогда
		Пользователи = Новый ПользователиNextCloud(ЭтотОбъект);
	КонецЕсли;

	Возврат Пользователи;

КонецФункции // Пользователи()

// Возвращает объект управления файлами сервиса NextCloud
//
// Возвращаемое значение:
//   ФайлыNextCloud    - объект управления файлами сервиса NextCloud
//
Функция Файлы() Экспорт

	Если НЕ ЗначениеЗаполнено(Файлы) Тогда
		Файлы = Новый ФайлыNextCloud(ЭтотОбъект);
	КонецЕсли;

	Возврат Файлы;

КонецФункции // Файлы()

#КонецОбласти // ПрограммныйИнтерфейс

#Область Инициализация

// Конструктор
//
// Параметры:
//   АдресСервиса                 - Строка    - адрес сервиса NextCloud
//   ИмяПользователяСервиса       - Строка    - имя пользователя сервиса NextCloud
//   ПарольПользователяСервиса    - Строка    - пароль пользователя сервиса NextCloud
//
Процедура ПриСозданииОбъекта(АдресСервиса, ИмяПользователяСервиса = "", ПарольПользователяСервиса = "")

	Лог = Служебный.Лог();

	УстановитьАдрес(АдресСервиса);
	УстановитьИмяПользователя(ИмяПользователяСервиса);
	УстановитьПарольПользователя(ПарольПользователяСервиса);

КонецПроцедуры // ПриСозданииОбъекта()

#КонецОбласти // Инициализация
