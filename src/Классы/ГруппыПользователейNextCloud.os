// ----------------------------------------------------------
// This Source Code Form is subject to the terms of the
// Mozilla Public License, v.2.0. If a copy of the MPL
// was not distributed with this file, You can obtain one
// at http://mozilla.org/MPL/2.0/.
// ----------------------------------------------------------
// Codebase: https://github.com/ArKuznetsov/nextcloud-lib/
// ----------------------------------------------------------

Перем Подключение;    // - ПодключениеNextCloud    - подключение к сервису NextCloud

Перем Лог;            // логгер

#Область ПрограммныйИнтерфейс

// Возвращает адрес сервиса NextCloud
//
// Возвращаемое значение:
//   ПодключениеNextCloud    - подключение к сервису NextCloud
//
Функция Подключение() Экспорт

	Возврат Подключение;

КонецФункции // Подключение()

// Устанавливает новое подключение к сервису NextCloud
//
// Параметры:
//   НовоеПодключение    - ПодключениеNextCloud    - подключение к сервису NextCloud
//
Процедура УстановитьПодключение(НовоеПодключение) Экспорт

	Подключение = НовоеПодключение;

КонецПроцедуры // УстановитьПодключение()

// Функция - получает список групп пользователей сервиса NextCloud
//
// Параметры:
//   СтрокаПоиска    - Строка    - строка поиска идентификатора группы пользователей
//                                 (если не указано выводятся все существующие группы)
//   Количество      - Число     - количество элементов в результате
//                                 (если 0 - выводятся все найденные группы)
//   Смещение        - Число     - номер страницы результата
//                                 (если 0 - то с начала списка найденных групп)
//
// Возвращаемое значение:
//    Массив из Строка    - список идентификаторов найденных групп пользователей
//
Функция Список(Знач СтрокаПоиска = "", Знач Количество = 0, Знач Смещение = 0) Экспорт

	СтрокаЗапроса = "/ocs/v1.php/cloud/groups";

	ПараметрыЗапроса = Новый Соответствие();
	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		ПараметрыЗапроса.Вставить("search", СтрокаПоиска);
	КонецЕсли;

	Если Количество > 0 Тогда
		ПараметрыЗапроса.Вставить("limit", Количество);
	КонецЕсли;

	Если Смещение > 0 Тогда
		ПараметрыЗапроса.Вставить("offset", Смещение);
	КонецЕсли;

	Заголовки = Новый Соответствие();
	Заголовки.Вставить("OCS-APIRequest", "true");
	
	РезультатЗапроса = Подключение.ВыполнитьЗапрос("GET", СтрокаЗапроса, ПараметрыЗапроса, Заголовки);

	РезультатЗапроса = Служебный.ПрочитатьXMLВСтруктуру(РезультатЗапроса.Текст());

	Статус = "";

	Статус    = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.status");
	СтатусКод = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.statuscode");
	Сообщение = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.message");
	Элементы  = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.data.groups.element");

	Если НЕ СтатусКод = "100" Тогда
		ВызватьИсключение СтрШаблон("Ошибка получения списка групп пользователей, код ошибки %1, статус ""%2"": %3%4",
		                            СтатусКод,
		                            Статус,
		                            Символы.ПС,
		                            Сообщение);
	КонецЕсли;

	Результат = Новый Массив();

	Если ТипЗнч(Элементы) = Тип("Строка") Тогда
		Результат.Добавить(Элементы);
	Иначе
		Результат = Элементы;
	КонецЕсли;

	Возврат Результат;

КонецФункции // Список()

// Процедура - добавляет группу пользователей NextCloud
//
// Параметры:
//   ГруппаИд    - Строка    - идентификатор группы пользователей NextCloud
//
Процедура Добавить(Знач ГруппаИд) Экспорт

	СтрокаЗапроса = "/ocs/v1.php/cloud/groups";

	Данные = Новый Структура();
	Данные.Вставить("groupid", ГруппаИд);

	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-Type"  , "application/x-www-form-urlencoded");
	Заголовки.Вставить("OCS-APIRequest", "true");
	
	РезультатЗапроса = Подключение.ВыполнитьЗапрос("POST", СтрокаЗапроса, , Заголовки, Данные);

	РезультатЗапроса = Служебный.ПрочитатьXMLВСтруктуру(РезультатЗапроса.Текст());

	Статус    = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.status");
	СтатусКод = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.statuscode");
	Сообщение = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.message");

	Если НЕ СтатусКод = "100" Тогда
		ВызватьИсключение СтрШаблон("Ошибка добавления группы пользователей ""%1"", код ошибки %2, статус ""%3"": %4%5",
		                            ГруппаИд,
		                            СтатусКод,
		                            Статус,
		                            Символы.ПС,
		                            Сообщение);
	КонецЕсли;

КонецПроцедуры // Добавить()

// Процедура - удаляет пользователя NextCloud
//
// Параметры:
//   ГруппаИд    - Строка    - идентификатор группы пользователей NextCloud
//
Процедура Удалить(Знач ГруппаИд) Экспорт

	СтрокаЗапроса = СтрШаблон("/ocs/v1.php/cloud/groups/%1", ГруппаИд);

	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-Type"  , "application/x-www-form-urlencoded");
	Заголовки.Вставить("OCS-APIRequest", "true");
	
	РезультатЗапроса = Подключение.ВыполнитьЗапрос("DELETE", СтрокаЗапроса, , Заголовки);

	РезультатЗапроса = Служебный.ПрочитатьXMLВСтруктуру(РезультатЗапроса.Текст());

	Статус    = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.status");
	СтатусКод = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.statuscode");
	Сообщение = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.message");

	Если НЕ СтатусКод = "100" Тогда
		ВызватьИсключение СтрШаблон("Ошибка удаления группы пользователей ""%1"", код ошибки %2, статус ""%3"": %4%5",
		                            ГруппаИд,
		                            СтатусКод,
		                            Статус,
		                            Символы.ПС,
		                            Сообщение);
	КонецЕсли;

КонецПроцедуры // Удалить()

// Функция - возвращает список пользователей группы пользователей NextCloud
//
// Параметры:
//   ГруппаИд    - Строка    - идентификатор группы пользователей NextCloud
//
// Возвращаемое значение:
//    Массив    - список пользователей в группе пользователей NextCloud
//
Функция ПользователиГруппы(Знач ГруппаИд) Экспорт

	СтрокаЗапроса = СтрШаблон("/ocs/v1.php/cloud/groups/%1", ГруппаИд);

	Заголовки = Новый Соответствие();
	Заголовки.Вставить("OCS-APIRequest", "true");
	
	РезультатЗапроса = Подключение.ВыполнитьЗапрос("GET", СтрокаЗапроса, , Заголовки);

	РезультатЗапроса = Служебный.ПрочитатьXMLВСтруктуру(РезультатЗапроса.Текст());

	Статус       = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.status");
	СтатусКод    = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.statuscode");
	Сообщение    = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.message");
	Пользователи = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.data.users");

	Если НЕ СтатусКод = "100" Тогда
		ВызватьИсключение СтрШаблон("Ошибка получения списка пользователей группы ""%1"", код ошибки %2, статус ""%3"": %4%5",
		                            ГруппаИд,
		                            СтатусКод,
		                            Статус,
		                            Символы.ПС,
		                            Сообщение);
	КонецЕсли;

	Результат = Новый Массив();

	Если НЕ ЗначениеЗаполнено(Сообщение) Тогда
		Возврат Результат;
	КонецЕсли;

	Элементы = Служебный.ЗначениеЭлементаСтруктуры(Пользователи, "element");

	Если ТипЗнч(Элементы) = Тип("Строка") Тогда
		Результат.Добавить(Элементы);
	Иначе
		Результат = Элементы;
	КонецЕсли;

	Возврат Результат;

КонецФункции // ПользователиГруппы()

// Функция - возвращает список администраторов группы пользователей NextCloud
//
// Параметры:
//   ГруппаИд    - Строка    - идентификатор группы пользователей NextCloud
//
// Возвращаемое значение:
//    Массив    - список администраторов в группе пользователей NextCloud
//
Функция АдминистраторыГруппы(Знач ГруппаИд) Экспорт

	СтрокаЗапроса = СтрШаблон("/ocs/v1.php/cloud/groups/%1/subadmins", ГруппаИд);

	Заголовки = Новый Соответствие();
	Заголовки.Вставить("OCS-APIRequest", "true");
	
	РезультатЗапроса = Подключение.ВыполнитьЗапрос("GET", СтрокаЗапроса, , Заголовки);

	РезультатЗапроса = Служебный.ПрочитатьXMLВСтруктуру(РезультатЗапроса.Текст());

	Статус       = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.status");
	СтатусКод    = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.statuscode");
	Сообщение    = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.meta.message");
	Пользователи = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "ocs.data");

	Если НЕ СтатусКод = "100" Тогда
		ВызватьИсключение СтрШаблон("Ошибка получения списка пользователей группы ""%1"", код ошибки %2, статус ""%3"": %4%5",
		                            ГруппаИд,
		                            СтатусКод,
		                            Статус,
		                            Символы.ПС,
		                            Сообщение);
	КонецЕсли;

	Результат = Новый Массив();

	Если НЕ ЗначениеЗаполнено(Пользователи) Тогда
		Возврат Результат;
	КонецЕсли;

	Элементы = Служебный.ЗначениеЭлементаСтруктуры(Пользователи, "element");

	Если ТипЗнч(Элементы) = Тип("Строка") Тогда
		Результат.Добавить(Элементы);
	Иначе
		Результат = Элементы;
	КонецЕсли;

	Возврат Результат;

КонецФункции // АдминистраторыГруппы()

#КонецОбласти // ПрограммныйИнтерфейс

#Область Инициализация

// Конструктор
//
// Параметры:
//   ПодключениеКСервису    - ПодключениеNextCloud    - подключение к сервису NextCloud
//
Процедура ПриСозданииОбъекта(Знач ПодключениеКСервису = Неопределено)

	Лог = Служебный.Лог();

	Если НЕ ЗначениеЗаполнено(ПодключениеКСервису) Тогда
		ПодключениеКСервису = Новый ПодключениеNextCloud();
	КонецЕсли;
	
	УстановитьПодключение(ПодключениеКСервису);

КонецПроцедуры // ПриСозданииОбъекта()

#КонецОбласти // Инициализация
