// ----------------------------------------------------------
// This Source Code Form is subject to the terms of the
// Mozilla Public License, v.2.0. If a copy of the MPL
// was not distributed with this file, You can obtain one
// at http://mozilla.org/MPL/2.0/.
// ----------------------------------------------------------
// Codebase: https://github.com/ArKuznetsov/nextcloud-lib/
// ----------------------------------------------------------

Перем Подключение;    // - ПодключениеNextCloud    - подключение к сервису NextCloud

Перем Лог;            // логгер

#Область ПрограммныйИнтерфейс

// Возвращает адрес сервиса NextCloud
//
// Возвращаемое значение:
//   ПодключениеNextCloud    - подключение к сервису NextCloud
//
Функция Подключение() Экспорт

	Возврат Подключение;

КонецФункции // Подключение()

// Устанавливает новое подключение к сервису NextCloud
//
// Параметры:
//   НовоеПодключение    - ПодключениеNextCloud    - подключение к сервису NextCloud
//
Процедура УстановитьПодключение(НовоеПодключение) Экспорт

	Подключение = НовоеПодключение;

КонецПроцедуры // УстановитьПодключение()

// Функция - получает список файлов сервиса NextCloud в указанном каталоге
//
// Параметры:
//   Каталог    - Строка    - каталог для получения списка файлов
//
// Возвращаемое значение:
//   Массив из Структура    - список описаний файлов в каталоге
//
Функция Список(Знач Каталог = "") Экспорт

	СтрокаЗапроса = "/remote.php/dav/files";

	ТелоЗапроса = "<?xml version=""1.0"" encoding=""UTF-8""?>
	              |<d:propfind xmlns:d=""DAV:"">
	              |	<d:prop xmlns:oc=""http://owncloud.org/ns"">
	              |	<d:getlastmodified/>
	              |	<d:getcontentlength/>
	              |	<d:getcontenttype/>
	              |	<oc:permissions/>
	              |	<oc:size/>
	              |	<oc:id/>
	              |	<oc:fileid/>
	              |	<oc:owner-id/>
	              |	<oc:owner-display-name/>
	              |	<d:resourcetype/>
	              |	<d:getetag/>
	              | </d:prop>
	              |</d:propfind>";
	
	СтрокаЗапроса = СтрокаЗапроса + "/" + Подключение.ИмяПользователя() + "/" + Каталог;

	РезультатЗапроса = Подключение.ВыполнитьЗапросPropfind(СтрокаЗапроса, ТелоЗапроса).Текст();

	РезультатЗапроса = Служебный.ПрочитатьXMLВСтруктуру(РезультатЗапроса);

	ОписанияФайлов = Служебный.ЗначениеЭлементаСтруктуры(РезультатЗапроса, "d:multistatus.d:response");

	Результат = Новый Массив();

	Для Каждого ТекОписание Из ОписанияФайлов Цикл

		ПутьКФайлу = Служебный.ЗначениеЭлементаСтруктуры(ТекОписание, "d:href");

		ЧастиПути = СтрРазделить(ПутьКФайлу, "/", Ложь);

		Свойства = Служебный.ЗначениеЭлементаСтруктуры(ТекОписание, "d:propstat");

		Если Свойства = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Если ТипЗнч(Свойства) = Тип("Массив") Тогда
			Префикс = "[0].d:prop";
		Иначе
			Префикс = "d:prop";
		КонецЕсли;

		ТипРесурса = Служебный.ЗначениеЭлементаСтруктуры(Свойства, СтрШаблон("%1.d:resourcetype", Префикс));

		Если ТипРесурса = Неопределено Тогда
			ЭтоФайл    = Ложь;
			ЭтоКаталог = Ложь;
		Иначе
			ЭтоКаталог = Служебный.ЕстьЭлементСоответствия(ТипРесурса, "d:collection");
			ЭтоФайл    = НЕ ЭтоКаталог;
		КонецЕсли;

		Если ЭтоФайл Тогда
			ТипФайла = Служебный.ЗначениеЭлементаСтруктуры(Свойства, СтрШаблон("%1.d:getcontenttype", Префикс));
		КонецЕсли;

		ДатаИзменения = Служебный.ЗначениеЭлементаСтруктуры(Свойства, СтрШаблон("%1.d:getlastmodified", Префикс));
		ПраваДоступа  = Служебный.ЗначениеЭлементаСтруктуры(Свойства, СтрШаблон("%1.oc:permissions", Префикс));
		ГлобальныИд   = Служебный.ЗначениеЭлементаСтруктуры(Свойства, СтрШаблон("%1.oc:id", Префикс));
		Ид            = Служебный.ЗначениеЭлементаСтруктуры(Свойства, СтрШаблон("%1.oc:fileid", Префикс));
		ВладелецИд    = Служебный.ЗначениеЭлементаСтруктуры(Свойства, СтрШаблон("%1.oc:owner-id", Префикс));
		ВладелецИмя   = Служебный.ЗначениеЭлементаСтруктуры(Свойства, СтрШаблон("%1.oc:owner-display-name", Префикс));
		Размер        = Служебный.ЗначениеЭлементаСтруктуры(Свойства, СтрШаблон("%1.oc:size", Префикс));

		ОписаниеФайла = Новый Структура();

		ОписаниеФайла.Вставить("Путь"         , ПутьКФайлу);
		ОписаниеФайла.Вставить("Имя"          , ЧастиПути[ЧастиПути.ВГраница()]);
		ОписаниеФайла.Вставить("ЭтоФайл"      , ЭтоФайл);
		ОписаниеФайла.Вставить("ЭтоКаталог"   , ЭтоКаталог);
		ОписаниеФайла.Вставить("ТипФайла"     , ТипФайла);
		ОписаниеФайла.Вставить("ДатаИзменения", ДатаИзменения);
		ОписаниеФайла.Вставить("ПраваДоступа" , ПраваДоступа);
		ОписаниеФайла.Вставить("ГлобальныИд"  , ГлобальныИд);
		ОписаниеФайла.Вставить("Ид"           , Ид);
		ОписаниеФайла.Вставить("ВладелецИд"   , ВладелецИд);
		ОписаниеФайла.Вставить("ВладелецИмя"  , ВладелецИмя);
		ОписаниеФайла.Вставить("Размер"       , Размер);

		Результат.Добавить(ОписаниеФайла);
		
	КонецЦикла;

	Возврат Результат;

КонецФункции // Список()

#КонецОбласти // ПрограммныйИнтерфейс

#Область Инициализация

// Конструктор
//
// Параметры:
//   ПодключениеКСервису    - ПодключениеNextCloud    - подключение к сервису NextCloud
//
Процедура ПриСозданииОбъекта(Знач ПодключениеКСервису = Неопределено)

	Лог = Служебный.Лог();

	Если НЕ ЗначениеЗаполнено(ПодключениеКСервису) Тогда
		ПодключениеКСервису = Новый ПодключениеNextCloud();
	КонецЕсли;

	УстановитьПодключение(ПодключениеКСервису);

КонецПроцедуры // ПриСозданииОбъекта()

#КонецОбласти // Инициализация
